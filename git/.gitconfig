# vim: set expandtab tabstop=4 ft=gitconfig:

# Put [user] configuration into a file called ~/.gituser
# It should look like this:
#
# [user]
#     name       = "User Name"
#     email      = email.address@example.com

[include]
    path         = ~/.gituser

[alias]
	s = status -sb
	d = diff
	a = add
	l = log --oneline
	co = checkout
	cm = commit -m
	pullr = pull --rebase
	aa = add --all .
	search = ! git branch -a | sed '/->/d' | sed 's/\\*//' | xargs git grep -n -I
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	plog = log --graph --pretty='format:%C(red)%d%C(reset) %C(yellow)%h%C(reset) %ar %C(green)%aN%C(reset) %s'
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	# Show the last commit
	last = log -1 head --stat
	# Do a hard reset
	rehard = reset --hard
	# List all branches
	branches = branch -la
	# Rank all committers
	rank = shortlog -sn --no-merges
	# Search commits for a string
	se = !git rev-list --all | xargs git grep -F
	# list files which have changed since REVIEW_BASE
	# (REVIEW_BASE defaults to 'master' in my zshrc)
	files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")
	# Same as above, but with a diff stat instead of just names
    # (better for interactive use)
	# You can override REVIEW_BASE per command: 
	#   > REVIEW_BASE=HEAD^ git stat
	#   > REVIEW_BASE=develop git stat
    stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")
	# Open all files changed since REVIEW_BASE in Vim tabs
    # Then, run fugitive's :Gdiff in each tab, and finally
    # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
    review = !vim -p $(git files) +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"
	# Same as the above, except specify names of files as arguments,
    # instead of opening all files:
    # git reviewone foo.js bar.js
    reviewone = !vim -p +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

[color]
    ui           = true
    diff         = auto
    grep         = true
    branch       = true
    interactive  = true
    pager        = true
    status       = true

[log]
    decorate     = true
    abbrevCommit = true
    date         = iso-local

[diff]
    tool         = vimdiff
	
[credential]
	helper = 
	helper = /usr/local/share/gcm-core/git-credential-manager-core

[credential "https://dev.azure.com"]
	useHttpPath = true

[init]
	defaultBranch = main
